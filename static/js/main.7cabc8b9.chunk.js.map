{"version":3,"sources":["Page.js","resources/utils.js","resources/lore.js","Spread.js","index.js"],"names":["App","props","children","title","shuffle","array","i","length","j","Math","floor","random","CARDS","name","unicode","image","SPREADS","one","three","five","cross","SpreadRoute","path","component","SpreadPage","default","render","Page","spreadId","match","params","useContext","AppContext","deck","count","setContext","useEffect","prevContext","className","onClick","src","process","alt","map","card","index","key","createContext","ReactDOM","Provider","value","useState","exact","window","app"],"mappings":"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","file":"static/js/main.7cabc8b9.chunk.js","sourcesContent":["import React from 'react'\n\nfunction App(props) {\n  const { children, title } = props\n  return (\n    <>\n      <header>{title}</header>\n      <main>{children}</main>\n    </>\n  )\n}\n\nexport default App\n","export function shuffle([...array]) {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array\n}","export const CARDS = [\n  { name: `The Fool`, unicode: `ðŸƒ `, image: `/media/RWS_Tarot_00_Fool.jpg`, },\n  { name: `The Magician`, unicode: `ðŸƒ¡`, image: `/media/RWS_Tarot_01_Magician.jpg`, },\n  { name: `The High Priestess`, unicode: `ðŸƒ¢`, image: `/media/RWS_Tarot_02_High_Priestess.jpg`, },\n  { name: `The Empress`, unicode: `ðŸƒ£`, image: `/media/RWS_Tarot_03_Empress.jpg`, },\n  { name: `The Emperor`, unicode: `ðŸƒ¤`, image: `/media/RWS_Tarot_04_Emperor.jpg`, },\n  { name: `The Hierophant`, unicode: `ðŸƒ¥`, image: `/media/RWS_Tarot_05_Hierophant.jpg`, },\n  { name: `The Lovers`, unicode: `ðŸƒ¦`, image: `/media/RWS_Tarot_06_Lovers.jpg`, },\n  { name: `The Chariot`, unicode: `ðŸƒ§`, image: `/media/RWS_Tarot_07_Chariot.jpg`, },\n  { name: `Strength`, unicode: `ðŸƒ¨`, image: `/media/RWS_Tarot_08_Strength.jpg`, },\n  { name: `The Hermit`, unicode: `ðŸƒ©`, image: `/media/RWS_Tarot_09_Hermit.jpg`, },\n  { name: `Wheel of Fortune`, unicode: `ðŸƒª`, image: `/media/RWS_Tarot_10_Wheel_of_Fortune.jpg`, },\n  { name: `Justice`, unicode: `ðŸƒ«`, image: `/media/RWS_Tarot_11_Justice.jpg`, },\n  { name: `The Hanged Man`, unicode: `ðŸƒ¬`, image: `/media/RWS_Tarot_12_Hanged_Man.jpg`, },\n  { name: `Death`, unicode: `ðŸƒ­`, image: `/media/RWS_Tarot_13_Death.jpg`, },\n  { name: `Temperance`, unicode: `ðŸƒ®`, image: `/media/RWS_Tarot_14_Temperance.jpg`, },\n  { name: `The Devil`, unicode: `ðŸƒ¯`, image: `/media/RWS_Tarot_15_Devil.jpg`, },\n  { name: `The Tower`, unicode: `ðŸƒ°`, image: `/media/RWS_Tarot_16_Tower.jpg`, },\n  { name: `The Star`, unicode: `ðŸƒ±`, image: `/media/RWS_Tarot_17_Star.jpg`, },\n  { name: `The Moon`, unicode: `ðŸƒ²`, image: `/media/RWS_Tarot_18_Moon.jpg`, },\n  { name: `The Sun`, unicode: `ðŸƒ³`, image: `/media/RWS_Tarot_19_Sun.jpg`, },\n  { name: `Judgement`, unicode: `ðŸƒ´`, image: `/media/RWS_Tarot_20_Judgement.jpg`, },\n  { name: `The World`, unicode: `ðŸƒµ`, image: `/media/RWS_Tarot_21_World.jpg`, },\n]\n\nexport const SPREADS = {\n  one: 1,\n  three: 3,\n  five: 5,\n  cross: 5,\n}\n","import React, { useContext, useEffect } from 'react'\nimport { Switch, Route } from 'react-router-dom'\nimport { AppContext } from '.'\nimport Page from './Page'\nimport './Spread.css'\n\nimport {shuffle} from './resources/utils'\nimport {CARDS, SPREADS} from './resources/lore'\n\nexport default function SpreadRoute(props) {\n  return (\n    <Switch>\n      <Route path=\"/spread/:spreadId\" component={SpreadPage} />\n      <Route default render={() => <Page title=\"Spread\" />} />\n    </Switch>\n  )\n}\n\nfunction SpreadPage(props) {\n  const { match: { params: { spreadId } } } = props\n  const [{deck = [], count = 0}, setContext] = useContext(AppContext)\n  useEffect(() => setContext(prevContext => ({ ...prevContext, deck: shuffle(CARDS) })), [setContext])\n\n  return (\n    <Page title={spreadId}>\n      <ol className={`spread ${spreadId}`} onClick={() => count < SPREADS[spreadId] && setContext(prevContext => ({ ...prevContext, count: count + 1 }))}>\n        <li className=\"back\"><img src={`${process.env.PUBLIC_URL}/media/RWS_Tarot.jpg`} alt=\"Card Back\"/></li>\n        {deck.map((card, index) => <li key={card.name} className={`${count > index ? 'dealt' : '' }`}><img src={`${process.env.PUBLIC_URL}${card.image}`} alt={card.name} /></li>)}\n      </ol>\n    </Page>\n  )\n}\n","import React, { createContext, useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter, Switch, Route } from 'react-router-dom'\nimport './index.css';\nimport Page from './Page';\nimport SpreadRoute from './Spread';\n\nexport const AppContext = createContext({})\n\nconst App = () =>\n  <AppContext.Provider value={useState(AppContext)}>\n    <HashRouter>\n      <Switch>\n        <Route exact path=\"/\" component={Page} />\n        <Route path=\"/spread\" component={SpreadRoute} />\n      </Switch>\n    </HashRouter>\n  </AppContext.Provider>\n\nReactDOM.render(<App />, window.app);"],"sourceRoot":""}